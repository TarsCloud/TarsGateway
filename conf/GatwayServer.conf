<main>
    #传到后面tars服务的http头, 多个头以,分隔
    filterheaders = X-GUID|X-XUA|Host
    # 是否打开通过主控发现代理，1打开， 0 关闭
    auto_proxy=1
    flow_report_obj=tars.GatewayServer.FlowControlObj
    <base>
        # tup 回包大小限制
        rspsize=5242880
        #tup_host 如果不配置，那么所有host开头的，且没有path或者path为 / ， 也判断为 tup 请求， 例如： prx.tup.whup.com|127.0.0.1|192.168.2.123
        tup_host=
        tup_path=/tup
        json_path=/json
        monitor_url=/monitor/monitor.html
    </base>
    
    <proxy>
        # servant = server_full_obj [| hash_type [| http header key] ]
        # hash_type: 0, 轮训; 1: requestid, 2: http头, 3: client ip
        # Hello=TestApp.HelloServer.HelloObj | 1
        # Hello=TestApp.HelloServer.HelloObj | 2 | X-GUID
        #Hello=TestApp.HelloServer.HelloObj | 3

        hello = TestApp.HelloServer.HelloObj

        <test>
            v = Base.LoginServer.LoginObj
            hello = Test.HelloServer.HelloObj@tcp -h 127.0.0.1 -p 22346 | 2 | X-GUID
        </test>

        <dogfood>
            v = Base.LoginServer.LoginObj
            hello = Test.HelloServer.HelloObj@tcp -h 127.0.0.1 -p 22346
        </dogfood>
    </proxy>

    <proxy_interface_blacklist>
        #proxy 接口黑名单
        #servant:func1|func2|....
        hello:func1|func2
        login:func1
    </proxy_interface_blacklist>

    <auth>
        # 按照不同的身份类型，配置不同的 login域，比如 phone_login， wx_login
        # 如果多个域中配置的有冲突， 那么后面的配置覆盖前面的配置
        <phone_login>
            verify=Base.UserServer.UserObj
            # 认证时候， 是否需要带上 body 内容给认证服务接口
            verify_data=true 
            # 透传http头
            verify_headers=X-GUID|X-RemoteIP|X-XUA
            # 认证票据http头
            auth_http_header=X-Token
            # 默认不鉴权，匹配上了才鉴权，在匹配上了之后，如果在exclude部分有配置，则不鉴权    
            <auth_list>
                # 支持应用级别、服务级别、接口级别
                # 应用级别
                Test1.*
                # 服务obj级别
                Test2.Test1Server.TestObj
                Test2.Test2Server.TestObj
                # 接口级别
                Test3.TestServer.TestObj:func1|func2|funcn
                Test3.HelloServer.HelloObj:test1

                <exclude> 
                    # 支持服务级别、接口级别                  
                    # 服务级别
                    Test1.Test1Server.TestObj
                    # 接口级别
                    Test2.Test1Server.TestObj:func1|func2|funcn
                    Test2.Test2Server.TestObj:test1
                </exclude>
            </auth_list>
        </phone_login>

        <wx_login>
            verify=WX.WXUserServer.UserObj
            auth_http_header=X-SessionID
            <auth_list>
                # 应用级别
                WXNews.*
            </auth_list>
        </wx_login>
    </auth>


    #http头:值, 转到proxy某个服务
    <httpheader>
        Q-gUID:344bfdf1afb146ffa68b2bd69a57f193 = test
        Q-GUID:b7392a2d60604eac81892f6f9c0232f7 = test
    </httpheader>

<http_retcode>
        # 定义哪些返回码做超时容错处理，哪些返回码做出错容灾处理
        inactive=2|6
        timeout=1|3
    </http_retcode>

    <http_router>
        # 本机绑定host 来测试以下用例
        # 192.168.2.131 x.tup.cn
        # 192.168.2.131 x.tup.com
        # 192.168.2.131 x1.tup.net
        # 192.168.2.131 x.tuptest.com
        # 192.168.2.131 f.tup.com 
        <station1>
            server_name=127.0.0.1
            location=/testhost/
            proxy_pass=http://127.0.0.1:8999
        </station1>
        # <fullhost>
        #     server_name=192.168.2.131
        #     location=/testhost/
        #     proxy_pass=http://127.0.0.1:8999/fullhost/
        # </fullhost>
        # <pre_host>
        #     server_name=*.tup.com
        #     location=/testhost/
        #     proxy_pass=http://127.0.0.1:8999/prehost/
        # </pre_host>
        # <suf_host>
        #     server_name=x.tup.*
        #     location=/testhost/
        #     proxy_pass=http://127.0.0.1:8999/sufhost/
        # </suf_host>
        # <reg_host>
        #     server_name=~x[0-9].tup.net$
        #     location=/testhost/
        #     proxy_pass=http://127.0.0.1:8999/reghost/
        # </reg_host>
        # <default_host>
        #     location=/testhost/
        #     proxy_pass=http://127.0.0.1:8999/defaulthost/
        # </default_host>
        # <full_path>
        #     server_name=f.tup.com 
        #     location== /fullpath/
        #     proxy_pass=http://127.0.0.1:8999/full_path/
        # </full_path>
        # <startwith_path>
        #     server_name=f.tup.com 
        #     location=^~ /startpath/
        #     proxy_pass=http://127.0.0.1:8999/startwith_path/
        # </startwith_path>
        # <reg_path>
        #     server_name=f.tup.com 
        #     location=~ /[0-9]regpath/
        #     proxy_pass=http://127.0.0.1:8999
        # </reg_path>
        # <reg2_path>
        #     server_name=f.tup.com 
        #     location=~* /[0-9]reg2PaTH/
        #     proxy_pass=http://127.0.0.1:8999
        # </reg2_path>
        # # <notreg_path>
        # #     server_name=f.tup.com 
        # #     location=!~ /notreg/
        # #     proxy_pass=http://172.16.8.171:10008
        # # </notreg_path>
        # <comm_path>
        #     server_name=f.tup.com 
        #     location=/commpath/
        #     proxy_pass=http://127.0.0.1:8999/comm_path/
        # </comm_path>
        # <default_path>
        #     server_name=f.tup.com 
        #     location=/
        #     proxy_pass=http://127.0.0.1:8999/default_path/
        # </default_path>
        # <proxy_path>
        #     server_name=f.tup.com 
        #     location=/proxypath/
        #     proxy_pass=http://127.0.0.1:8999
        # </proxy_path>
        # <proxy2_path>
        #     server_name=f.tup.com 
        #     location=/proxy2path/
        #     proxy_pass=http://127.0.0.1:8999/
        # </proxy2_path>
    </http_router>

    <db>
        charset=utf8
        dbhost =db.tars.com
        dbname =db_base
        dbpass =taf2015
        dbport =3306
        dbuser =tars
    </db>
</main>
